{"version":3,"sources":["../src/OauthGithub.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;IAMqB;AACnB,WADmB,UACnB,OAAyC;QAA3B,aAA2B;QAAvB,qBAAuB;2BAAf,OAAe;QAAf,qCAAS,iBAAM;;0BADtB,YACsB;;AACvC,0BAAO,EAAP,EAAW,sBAAX,EADuC;AAEvC,0BAAO,MAAP,EAAe,0BAAf,EAFuC;AAGvC,SAAK,UAAL,GAAkB,OAAO,MAAP,GAAgB,CAAhB,GAAoB,YAAY,OAAO,IAAP,CAAY,KAAZ,CAAZ,GAAiC,EAArD,CAHqB;AAIvC,SAAK,QAAL,GAAgB,EAAhB,CAJuC;AAKvC,SAAK,YAAL,GAAoB,MAApB,CALuC;AAMvC,SAAK,MAAL,GAAc,IAAd,CANuC;GAAzC;;eADmB;;iCAUN,UAAU;;;AACrB,oBAAI,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpB,cAAK,MAAL,GAAc,4BAAkB,EAAE,OAAO,GAAP,EAAY,QAAQ,GAAR,EAAa,oBAAoB,KAApB,EAA7C,CAAd,CADoB;AAEpB,YAAI,UAAU,wDAAwD,MAAK,QAAL,GAAgB,MAAK,UAAL,CAFlE;AAGpB,cAAK,MAAL,CAAY,OAAZ,CAAoB,OAApB,EAHoB;AAIpB,cAAK,MAAL,CAAY,WAAZ,CAAwB,EAAxB,CAA2B,eAA3B,EAA4C,UAAC,KAAD,EAAQ,GAAR,EAAgB;AAC1D,gBAAK,cAAL,CAAoB,GAApB,EAAyB,QAAzB,EAD0D;SAAhB,CAA5C,CAJoB;AAOpB,cAAK,MAAL,CAAY,WAAZ,CAAwB,EAAxB,CAA2B,0BAA3B,EAAuD,UAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAA2B;AAChF,gBAAK,cAAL,CAAoB,MAApB,EAA4B,QAA5B,EADgF;SAA3B,CAAvD,CAPoB;AAUpB,cAAK,MAAL,CAAY,EAAZ,CAAe,OAAf,EAAwB,YAAM;AAC5B,gBAAK,MAAL,GAAc,IAAd,CAD4B;SAAN,EAErB,KAFH,EAVoB;OAAN,CAAhB,CADqB;;;;mCAiBR,KAAK,UAAU;AAC5B,UAAI,WAAW,eAAe,IAAf,CAAoB,GAApB,KAA4B,IAA5B,CADa;AAE5B,UAAI,OAAO,QAAC,IAAY,SAAS,MAAT,GAAkB,CAAlB,GAAuB,SAAS,CAAT,CAApC,GAAkD,IAAlD,CAFiB;AAG5B,UAAI,QAAQ,gBAAgB,IAAhB,CAAqB,GAArB,CAAR,CAHwB;;AAK5B,UAAI,IAAJ,EAAU;AACR,aAAK,kBAAL,CAAwB,KAAK,QAAL,EAAe,KAAK,YAAL,EAAmB,KAAK,UAAL,EAAiB,IAA3E,EAAiF,QAAjF,EADQ;OAAV,MAEO,IAAI,KAAJ,EAAW;AAChB,gBAAQ,GAAR,CAAY,KAAZ,EADgB;OAAX;;;;uCAKU,IAAI,QAAQ,QAAQ,MAAM,UAAU;AACrD,2BAAQ,IAAR,CAAa,6CAAb,EAA4D;AAC1D,mBAAW,EAAX;AACA,uBAAe,MAAf;AACA,cAAM,IAAN;OAHF,EAIG,GAJH,CAIO,UAAC,GAAD,EAAM,QAAN,EAAmB;AACxB,YAAI,GAAJ,EAAS;AACP,mBAAS,GAAT,EADO;SAAT;;AAIA,YAAI,eAAe,SAAS,IAAT,CAAc,YAAd,CALK;AAMxB,iBAAS,SAAS,IAAT,CAAc,YAAd,CAAT,CANwB;OAAnB,CAJP,CADqD;;;;SAvCpC","file":"OauthGithub.js","sourcesContent":["'use strict';\n\nimport assert from 'assert';\nimport { app, BrowserWindow } from 'electron';\nimport request from 'superagent';\n\nexport default class AuthWindow {\n  constructor({ id, secret, scopes = [] }) {\n    assert(id, 'Client ID is needed!');\n    assert(secret, 'Client Secret is needed!');\n    this.scopeQuery = scopes.length > 0 ? '&scope=' + scopes.join('%2C') : '';\n    this.clientId = id;\n    this.clientSecret = secret;\n    this.window = null;\n  }\n\n  startRequest(callback) {\n    app.on('ready', () => {\n      this.window = new BrowserWindow({ width: 800, height: 600, 'node-integration': false });\n      var authURL = 'https://github.com/login/oauth/authorize?client_id=' + this.clientId + this.scopeQuery;\n      this.window.loadURL(authURL);\n      this.window.webContents.on('will-navigate', (event, url) => {\n        this.handleCallback(url, callback);\n      });\n      this.window.webContents.on('did-get-redirect-request', (event, oldUrl, newUrl) => {\n        this.handleCallback(newUrl, callback);\n      });\n      this.window.on('close', () => {\n        this.window = null;\n      }, false);\n    });\n  }\n\n  handleCallback(url, callback) {\n    let raw_code = /code=([^&]*)/.exec(url) || null;\n    let code = (raw_code && raw_code.length > 1) ? raw_code[1] : null;\n    let error = /\\?error=(.+)$/.exec(url);\n\n    if (code) {\n      this.requestGithubToken(this.clientId, this.clientSecret, this.scopeQuery, code, callback);\n    } else if (error) {\n      console.log(error);\n    }\n  }\n\n  requestGithubToken(id, secret, scopes, code, callback) {\n    request.post('https://github.com/login/oauth/access_token', {\n      client_id: id,\n      client_secret: secret,\n      code: code,\n    }).end((err, response) => {\n      if (err) {\n        callback(err);\n      }\n\n      var access_token = response.body.access_token;\n      callback(response.body.access_token);\n    });\n  }\n\n}\n"]}